(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
(function() {
  var V1Meta, V1Server, server, v1;

  V1Meta = v1sdk.V1Meta;

  V1Server = v1sdk.V1Server;

  server = new V1Server();

  v1 = new V1Meta(server);

  v1.query({
    select: ['Email', 'Username', 'ID'],
    from: "Member",
    where: {
      ID: 'Member:1000',
      Email: 'andre@company.com',
      Username: 'andre'
    },
    success: function(result) {
      var message;
      return message = 'Email: ' + result.Email + "<br/>\n" + 'Username: ' + result.Username + "<br/>\n" + 'ID: ' + result.ID;
    },
    output: function() {
      if (server.useBrowserHttpStack) {
        document.getElementById("query").innerHTML += "<b>Query result:</b><br/><br/>" + message;
      } else {
        console.log("\nQuery result:\n\n" + message);
      }
      return setTimeout(output, 2000);
    },
    error: function(err) {
      return console.log("Error: " + err);
    }
  });

  v1.trans_query({
    from: "Member",
    where: {
      ID: 'Member:1000',
      Email: 'andre@company.com',
      Username: 'andre'
    },
    select: ["Email", "ID", "Username"],
    success: function(trans) {
      var message, output;
      message = "";
      trans.iter(function(member) {
        if (server.useBrowserHttpStack) {
          return message += member + "<br/>\n";
        } else {
          return message += member + "\n";
        }
      });
      output = function() {
        if (server.useBrowserHttpStack) {
          return document.getElementById("trans_query").innerHTML += "<b>Transaction Query result:</b><br/><br/>" + message;
        } else {
          return console.log("\nTransaction Query result:\n\n" + message);
        }
      };
      return setTimeout(output, 2000);
    },
    error: function(err) {
      return console.log("Query failed:\n" + util.inspect(err));
    }
  });

}).call(this);

},{}]},{},[1])